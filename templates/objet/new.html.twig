{% extends 'base.html.twig' %}

{% block title %}
    objet
{% endblock %}

{% block body %}
<section class="service_section layout_padding bg-light">
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h2 class="text-center mb-0">Ajouter un Nouvel Objet</h2>
                    </div>
                    <div class="card-body">
                        {{ include('objet/_form.html.twig') }}
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
    <style>
        .card {
            border: none;
            border-radius: 15px;
        }
        
        .card-header {
            border-radius: 15px 15px 0 0;
            padding: 20px;
        }

        .card-body {
            padding: 30px;
        }

        .form-control {
            border-radius: 8px;
            padding: 12px;
            margin-bottom: 15px;
        }

        .btn-primary {
            padding: 12px 30px;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Form validation
            const form = document.querySelector('form');
            if(form) {
                form.addEventListener('submit', function(e) {
                    const requiredFields = form.querySelectorAll('[required]');
                    requiredFields.forEach(field => {
                        if (!field.value) {
                            e.preventDefault();
                            field.classList.add('is-invalid');
                        } else {
                            field.classList.remove('is-invalid');
                        }
                    });
                });
            }

            // Dynamic feedback
            const inputs = document.querySelectorAll('.form-control');
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.classList.add('shadow-sm');
                });
                
                input.addEventListener('blur', function() {
                    this.classList.remove('shadow-sm');
                });
            });
        });
    </script>
    <style>
        .shadow-sm {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }
    </style>
    <style>
        .form-control {
            border-radius: 8px;
            padding: 12px;
            margin-bottom: 15px;
        }
    </style>
    <style>
        .btn-primary {
            padding: 12px 30px;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
    </style>
    <style>
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
    </style>
    <style>
        .form-control {
            border-radius: 8px;
            padding: 12px;
            margin-bottom: 15px;
        }
    </style>
    <style>
{% endblock %}

